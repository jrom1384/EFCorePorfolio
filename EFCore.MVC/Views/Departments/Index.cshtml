@model GenericPage<DepartmentVM>
@{
    ViewData["Title"] = "Departments";
}

<h1 class="text-primary">Departments</h1>

<form asp-action="Index">
    <div class="form-row">
        <div class="form-group col-md-8">
            <input class="form-control" asp-for="@Model.SearchString" type="text" value="@Model.SearchString" />
        </div>
        <div class="form-group col-md-2">
            <input type="submit" class="btn btn-secondary btn-sm" value="Search" />
            <a asp-action="Index" class="btn btn-secondary btn-sm">Reset</a>
        </div>
    </div>
</form>
@{
    var headerRouteData = new Dictionary<string, string>()
    {
        { "SearchString", Model.SearchString },
        { "PreviousSortField", Model.PreviousSortField },
        { "SortOrder", Model.SortOrder.ToString() },
        { "CurrentPageIndex", Model.CurrentPageIndex.ToString() },
        { "IsHeaderClicked", true.ToString() }
    };

    var sequence = 1;
}

<table class="table table-hover border-bottom">
    <thead>
        <tr>
            <th><a href="#">#</a></th>
            <th>
                <a asp-action="Index" asp-all-route-data="@headerRouteData" asp-route-SortField="Department">
                    @Html.DisplayNameFor(model => model.PaginatedList.Items.First().Department)
                </a>
            </th>
            <th>
                <a asp-action="Create" class="text-primary"><i class="far fa-plus-square"></i>  Create New</a>
                <div class="float-lg-right">
                    @{
                        if (Model.PaginatedList.MatchCount > Model.PaginatedList.PageSize)
                        {
                            <h6 class="text-dark float-right small">Page @Model.CurrentPageIndex of @Model.PaginatedList.TotalPages</h6>
                        }
                    }
                </div>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PaginatedList.Items)
        {
            <tr>
                <td>
                    @(((Model.CurrentPageIndex - 1) * Model.PaginatedList.PageSize) + sequence++)
                </td>
                <td>
                    <i class="far fa-building"></i>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="small">Details</a> |
                    <a asp-action="Edit" asp-route-id="@item.Id" class="small">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="small">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{

    var pageNavigationRouteData = new Dictionary<string, string>()
    {
        { "SearchString", Model.SearchString },
        { "SortField", Model.SortField },
        { "PreviousSortField", Model.PreviousSortField },
        { "SortOrder", Model.SortOrder.ToString() },
    };

    <vc:paging action="Index"
               route-Data="pageNavigationRouteData"
               current-page-index="Model.CurrentPageIndex"
               page-index-view-limit="Model.PaginatedList.PageIndexViewLimit"
               match-count="Model.PaginatedList.MatchCount"
               has-next-page="Model.PaginatedList.HasNextPage"
               has-previous-page="Model.PaginatedList.HasPreviousPage"
               total-pages="Model.PaginatedList.TotalPages"
               page-size="Model.PaginatedList.PageSize"></vc:paging>
}

@section Scripts{
    <script>
                $(document).ready(() =>
                {
                    function trim(input) {
                        var text = input.val();
                        input.val($.trim(text));
                    }

                    $('#@Html.IdFor(m => m.SearchString)').on('click mouseleave blur', function () { trim($(this)); });
                });
    </script>
}